/*
Copyright (c) 2008~2009, Justin R. Bengtson (poopshotgun@yahoo.com)
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
        this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice,
        this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.
    * Neither the name of Justin R. Bengtson nor the names of contributors may
        be used to endorse or promote products derived from this software
        without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

package saw.gui;

import common.DesignForm;
import dialog.frmForce;
import filehandlers.ImageTracker;
import java.util.Vector;
import saw.components.*;

public class frmMain extends javax.swing.JFrame implements DesignForm {

    public CombatVehicle CurVee = new CombatVehicle();
    private ImageTracker imageTracker = new ImageTracker();
    //public dlgOpen dOpen = new dlgOpen(this, true);
    public frmForce dForce = new frmForce(this, imageTracker);

    /** Creates new form frmMain */
    public frmMain() {

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlBasics = new javax.swing.JTabbedPane();
        pnlBasicSetup = new javax.swing.JPanel();
        pblBasicInfo = new javax.swing.JPanel();
        cmbTechBase = new javax.swing.JComboBox();
        cmbRulesLevel = new javax.swing.JComboBox();
        cmbEra = new javax.swing.JComboBox();
        txtProdYear = new javax.swing.JTextField();
        txtVehicleName = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblEraYears = new javax.swing.JLabel();
        chkYearRestrict = new javax.swing.JCheckBox();
        pnlChassis = new javax.swing.JPanel();
        cmbMotiveType = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        spnTonnage = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        cmbEngineType = new javax.swing.JComboBox();
        chkTrailer = new javax.swing.JCheckBox();
        lblVeeClass = new javax.swing.JLabel();
        chkOmniVee = new javax.swing.JCheckBox();
        pnlMovement = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        spnCruiseMP = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        lblFlankMP = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        spnJumpMP = new javax.swing.JSpinner();
        pnlTurrets = new javax.swing.JPanel();
        chkSingleTurret = new javax.swing.JCheckBox();
        chkDualTurret = new javax.swing.JCheckBox();
        chkSponsoonTurrets = new javax.swing.JCheckBox();
        chkChinTurret = new javax.swing.JCheckBox();
        chkMastMount = new javax.swing.JCheckBox();
        pnlSummary = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtSumIntTons = new javax.swing.JTextField();
        txtSumIntAV = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtSumEngTons = new javax.swing.JTextField();
        txtSumEngAV = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtSumLifTons = new javax.swing.JTextField();
        txtSumLifAV = new javax.swing.JTextField();
        txtSumEngSpace = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtSumConTons = new javax.swing.JTextField();
        txtSumConAV = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtSumJJTons = new javax.swing.JTextField();
        txtSumJJSpace = new javax.swing.JTextField();
        txtSumJJAV = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtSumHSTons = new javax.swing.JTextField();
        txtSumHSAV = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtSumArmTons = new javax.swing.JTextField();
        txtSumArmSpace = new javax.swing.JTextField();
        txtSumArmAV = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtSumTurTons = new javax.swing.JTextField();
        txtSumTurAV = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtSumRTuTons = new javax.swing.JTextField();
        txtSumRTuAV = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtSumSpnTons = new javax.swing.JTextField();
        txtSumSpnAV = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtSumPATons = new javax.swing.JTextField();
        txtSumPAAV = new javax.swing.JTextField();
        pnlInformation = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        lblSupensionFacter = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        lblMinEngineTons = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        lblBaseEngineRating = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        lblFinalEngineRating = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        lblFreeHeatSinks = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        lblNumCrew = new javax.swing.JLabel();
        pnlExperimental = new javax.swing.JPanel();
        chkArmoredMotive = new javax.swing.JCheckBox();
        chkCommandConsole = new javax.swing.JCheckBox();
        chkEscapePod = new javax.swing.JCheckBox();
        chkMinesweeper = new javax.swing.JCheckBox();
        chkJetBooster = new javax.swing.JCheckBox();
        pnlChassisMods = new javax.swing.JPanel();
        chkFlotationHull = new javax.swing.JCheckBox();
        chkLimitedAmph = new javax.swing.JCheckBox();
        chkFullAmph = new javax.swing.JCheckBox();
        chkDuneBuggy = new javax.swing.JCheckBox();
        chkEnviroSealing = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        pnlRightArmor = new javax.swing.JPanel();
        lblRightIntPts = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        spnRightArmor = new javax.swing.JSpinner();
        pnlFrontArmor = new javax.swing.JPanel();
        lblFrontIntPts = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        spnFrontArmor = new javax.swing.JSpinner();
        pnlLeftArmor = new javax.swing.JPanel();
        lblLeftIntPts = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        spnLeftArmor = new javax.swing.JSpinner();
        pnlRearArmor = new javax.swing.JPanel();
        lblRearIntPts = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        spnRearArmor = new javax.swing.JSpinner();
        pnlTurretArmor = new javax.swing.JPanel();
        lblTurretIntPts = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        spnTurretArmor = new javax.swing.JSpinner();
        pnlRearTurretArmor = new javax.swing.JPanel();
        lblRearTurretIntPts = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        spnRearTurretArmor = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        cmbArmorType = new javax.swing.JComboBox();
        chkBalanceLRArmor = new javax.swing.JCheckBox();
        chkBalanceFRArmor = new javax.swing.JCheckBox();
        btnSetArmorTons = new javax.swing.JButton();
        btnUseRemaining = new javax.swing.JButton();
        btnMaximize = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        lblArmorTotals = new javax.swing.JLabel();
        lblArmorCoverage = new javax.swing.JLabel();
        txtArmorTons = new javax.swing.JTextField();
        txtArmorSpace = new javax.swing.JTextField();
        lblArmorTonsWasted = new javax.swing.JLabel();
        lblArmorLeftInLot = new javax.swing.JLabel();
        pnlEquipment = new javax.swing.JPanel();
        pnlFluff = new javax.swing.JPanel();
        pnlInfoPane = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton5 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnPostToS7 = new javax.swing.JButton();
        jSeparator25 = new javax.swing.JToolBar.Separator();
        btnAddToForceList = new javax.swing.JButton();
        btnForceList = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton6 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pnlBasics.setMinimumSize(new java.awt.Dimension(788, 493));
        pnlBasics.setPreferredSize(new java.awt.Dimension(788, 493));

        pnlBasicSetup.setLayout(new java.awt.GridBagLayout());

        pblBasicInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Basic Information"));
        pblBasicInfo.setLayout(new java.awt.GridBagLayout());

        cmbTechBase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Inner Sphere", "Clan", "Mixed Tech" }));
        cmbTechBase.setMinimumSize(new java.awt.Dimension(150, 20));
        cmbTechBase.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pblBasicInfo.add(cmbTechBase, gridBagConstraints);

        cmbRulesLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tournament Legal", "Advanced", "Experimental" }));
        cmbRulesLevel.setMinimumSize(new java.awt.Dimension(150, 20));
        cmbRulesLevel.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pblBasicInfo.add(cmbRulesLevel, gridBagConstraints);

        cmbEra.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Age of War/Star League", "Succession Wars", "Clan Invasion", "All Eras (non-canon)" }));
        cmbEra.setMinimumSize(new java.awt.Dimension(150, 20));
        cmbEra.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pblBasicInfo.add(cmbEra, gridBagConstraints);

        txtProdYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProdYear.setMinimumSize(new java.awt.Dimension(150, 20));
        txtProdYear.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pblBasicInfo.add(txtProdYear, gridBagConstraints);

        txtVehicleName.setMinimumSize(new java.awt.Dimension(150, 20));
        txtVehicleName.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pblBasicInfo.add(txtVehicleName, gridBagConstraints);

        txtModel.setMinimumSize(new java.awt.Dimension(150, 20));
        txtModel.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pblBasicInfo.add(txtModel, gridBagConstraints);

        jLabel1.setText("Vehicle Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pblBasicInfo.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Rules Level:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pblBasicInfo.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Tech Base:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pblBasicInfo.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Model:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pblBasicInfo.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Era:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pblBasicInfo.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Production Year:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pblBasicInfo.add(jLabel6, gridBagConstraints);

        lblEraYears.setText("2443~2800");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        pblBasicInfo.add(lblEraYears, gridBagConstraints);

        chkYearRestrict.setText("Restrict Availability by Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pblBasicInfo.add(chkYearRestrict, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlBasicSetup.add(pblBasicInfo, gridBagConstraints);

        pnlChassis.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Chassis"));
        pnlChassis.setLayout(new java.awt.GridBagLayout());

        cmbMotiveType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hovercraft", "Naval (Displacement)", "Naval (Hydrofoil)", "Naval (Submarine)", "Tracked", "VTOL", "Wheeled", "WiGE" }));
        cmbMotiveType.setMinimumSize(new java.awt.Dimension(150, 20));
        cmbMotiveType.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        pnlChassis.add(cmbMotiveType, gridBagConstraints);

        jLabel7.setText("Motive Type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        pnlChassis.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Tonnage:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlChassis.add(jLabel8, gridBagConstraints);

        spnTonnage.setMinimumSize(new java.awt.Dimension(45, 20));
        spnTonnage.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlChassis.add(spnTonnage, gridBagConstraints);

        jLabel9.setText("Engine:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        pnlChassis.add(jLabel9, gridBagConstraints);

        cmbEngineType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "I.C.E.", "Fusion", "Light Fusion", "XL Fusion", "Compact Fusion" }));
        cmbEngineType.setMinimumSize(new java.awt.Dimension(150, 20));
        cmbEngineType.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlChassis.add(cmbEngineType, gridBagConstraints);

        chkTrailer.setText("Trailer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlChassis.add(chkTrailer, gridBagConstraints);

        lblVeeClass.setText("Light Vee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        pnlChassis.add(lblVeeClass, gridBagConstraints);

        chkOmniVee.setText("OmniVehicle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlChassis.add(chkOmniVee, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlBasicSetup.add(pnlChassis, gridBagConstraints);

        pnlMovement.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Movement"));
        pnlMovement.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Cruise MP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlMovement.add(jLabel10, gridBagConstraints);

        spnCruiseMP.setMinimumSize(new java.awt.Dimension(45, 20));
        spnCruiseMP.setPreferredSize(new java.awt.Dimension(45, 20));
        pnlMovement.add(spnCruiseMP, new java.awt.GridBagConstraints());

        jLabel11.setText("Flank MP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 2);
        pnlMovement.add(jLabel11, gridBagConstraints);

        lblFlankMP.setText("00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        pnlMovement.add(lblFlankMP, gridBagConstraints);

        jLabel13.setText("Jump MP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlMovement.add(jLabel13, gridBagConstraints);

        spnJumpMP.setMinimumSize(new java.awt.Dimension(45, 20));
        spnJumpMP.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        pnlMovement.add(spnJumpMP, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlBasicSetup.add(pnlMovement, gridBagConstraints);

        pnlTurrets.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Turrets"));
        pnlTurrets.setLayout(new java.awt.GridBagLayout());

        chkSingleTurret.setText("Single Turret");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlTurrets.add(chkSingleTurret, gridBagConstraints);

        chkDualTurret.setText("Dual Turret");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlTurrets.add(chkDualTurret, gridBagConstraints);

        chkSponsoonTurrets.setText("Sponsoon Turrets");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlTurrets.add(chkSponsoonTurrets, gridBagConstraints);

        chkChinTurret.setText("Chin Turret");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlTurrets.add(chkChinTurret, gridBagConstraints);

        chkMastMount.setText("Mast Mount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlTurrets.add(chkMastMount, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlBasicSetup.add(pnlTurrets, gridBagConstraints);

        pnlSummary.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Summary"));
        pnlSummary.setLayout(new java.awt.GridBagLayout());

        jLabel12.setText("Item");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel12, gridBagConstraints);

        jLabel14.setText("Tonnage");
        pnlSummary.add(jLabel14, new java.awt.GridBagConstraints());

        jLabel15.setText("Space");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        pnlSummary.add(jLabel15, gridBagConstraints);

        jLabel16.setText("Availability");
        pnlSummary.add(jLabel16, new java.awt.GridBagConstraints());

        jLabel17.setText("Internal Structure:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel17, gridBagConstraints);

        txtSumIntTons.setEditable(false);
        txtSumIntTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumIntTons.setText("000.00");
        txtSumIntTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumIntTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumIntTons, gridBagConstraints);

        txtSumIntAV.setEditable(false);
        txtSumIntAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumIntAV.setText("X/X-X-X");
        txtSumIntAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumIntAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumIntAV, gridBagConstraints);

        jLabel18.setText("Engine:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel18, gridBagConstraints);

        txtSumEngTons.setEditable(false);
        txtSumEngTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumEngTons.setText("000.00");
        txtSumEngTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumEngTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumEngTons, gridBagConstraints);

        txtSumEngAV.setEditable(false);
        txtSumEngAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumEngAV.setText("X/X-X-X");
        txtSumEngAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumEngAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumEngAV, gridBagConstraints);

        jLabel19.setText("Lift/Dive/Rotor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel19, gridBagConstraints);

        txtSumLifTons.setEditable(false);
        txtSumLifTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumLifTons.setText("000.00");
        txtSumLifTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumLifTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumLifTons, gridBagConstraints);

        txtSumLifAV.setEditable(false);
        txtSumLifAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumLifAV.setText("X/X-X-X");
        txtSumLifAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumLifAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumLifAV, gridBagConstraints);

        txtSumEngSpace.setEditable(false);
        txtSumEngSpace.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumEngSpace.setText("00");
        txtSumEngSpace.setMinimumSize(new java.awt.Dimension(40, 20));
        txtSumEngSpace.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        pnlSummary.add(txtSumEngSpace, gridBagConstraints);

        jLabel20.setText("Controls:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel20, gridBagConstraints);

        txtSumConTons.setEditable(false);
        txtSumConTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumConTons.setText("000.00");
        txtSumConTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumConTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumConTons, gridBagConstraints);

        txtSumConAV.setEditable(false);
        txtSumConAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumConAV.setText("X/X-X-X");
        txtSumConAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumConAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumConAV, gridBagConstraints);

        jLabel21.setText("Jump Jets:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel21, gridBagConstraints);

        txtSumJJTons.setEditable(false);
        txtSumJJTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumJJTons.setText("000.00");
        txtSumJJTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumJJTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumJJTons, gridBagConstraints);

        txtSumJJSpace.setEditable(false);
        txtSumJJSpace.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumJJSpace.setText("00");
        txtSumJJSpace.setMinimumSize(new java.awt.Dimension(40, 20));
        txtSumJJSpace.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        pnlSummary.add(txtSumJJSpace, gridBagConstraints);

        txtSumJJAV.setEditable(false);
        txtSumJJAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumJJAV.setText("X/X-X-X");
        txtSumJJAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumJJAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumJJAV, gridBagConstraints);

        jLabel22.setText("Heat Sinks:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel22, gridBagConstraints);

        txtSumHSTons.setEditable(false);
        txtSumHSTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumHSTons.setText("000.00");
        txtSumHSTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumHSTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumHSTons, gridBagConstraints);

        txtSumHSAV.setEditable(false);
        txtSumHSAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumHSAV.setText("X/X-X-X");
        txtSumHSAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumHSAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumHSAV, gridBagConstraints);

        jLabel23.setText("Armor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel23, gridBagConstraints);

        txtSumArmTons.setEditable(false);
        txtSumArmTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumArmTons.setText("000.00");
        txtSumArmTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumArmTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumArmTons, gridBagConstraints);

        txtSumArmSpace.setEditable(false);
        txtSumArmSpace.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumArmSpace.setText("00");
        txtSumArmSpace.setMinimumSize(new java.awt.Dimension(40, 20));
        txtSumArmSpace.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        pnlSummary.add(txtSumArmSpace, gridBagConstraints);

        txtSumArmAV.setEditable(false);
        txtSumArmAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumArmAV.setText("X/X-X-X");
        txtSumArmAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumArmAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumArmAV, gridBagConstraints);

        jLabel24.setText("Turret:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel24, gridBagConstraints);

        txtSumTurTons.setEditable(false);
        txtSumTurTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumTurTons.setText("000.00");
        txtSumTurTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumTurTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumTurTons, gridBagConstraints);

        txtSumTurAV.setEditable(false);
        txtSumTurAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumTurAV.setText("X/X-X-X");
        txtSumTurAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumTurAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumTurAV, gridBagConstraints);

        jLabel25.setText("Rear Turret:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel25, gridBagConstraints);

        txtSumRTuTons.setEditable(false);
        txtSumRTuTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumRTuTons.setText("000.00");
        txtSumRTuTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumRTuTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumRTuTons, gridBagConstraints);

        txtSumRTuAV.setEditable(false);
        txtSumRTuAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumRTuAV.setText("X/X-X-X");
        txtSumRTuAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumRTuAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumRTuAV, gridBagConstraints);

        jLabel26.setText("Sponsoons:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel26, gridBagConstraints);

        txtSumSpnTons.setEditable(false);
        txtSumSpnTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumSpnTons.setText("000.00");
        txtSumSpnTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumSpnTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumSpnTons, gridBagConstraints);

        txtSumSpnAV.setEditable(false);
        txtSumSpnAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumSpnAV.setText("X/X-X-X");
        txtSumSpnAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumSpnAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumSpnAV, gridBagConstraints);

        jLabel27.setText("Power Amplifiers:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        pnlSummary.add(jLabel27, gridBagConstraints);

        txtSumPATons.setEditable(false);
        txtSumPATons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumPATons.setText("000.00");
        txtSumPATons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtSumPATons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlSummary.add(txtSumPATons, gridBagConstraints);

        txtSumPAAV.setEditable(false);
        txtSumPAAV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumPAAV.setText("X/X-X-X");
        txtSumPAAV.setMinimumSize(new java.awt.Dimension(65, 20));
        txtSumPAAV.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlSummary.add(txtSumPAAV, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlBasicSetup.add(pnlSummary, gridBagConstraints);

        pnlInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Information"));
        pnlInformation.setLayout(new java.awt.GridBagLayout());

        jLabel29.setText("Suspension Factor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 4);
        pnlInformation.add(jLabel29, gridBagConstraints);

        lblSupensionFacter.setText("000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlInformation.add(lblSupensionFacter, gridBagConstraints);

        jLabel31.setText("Minimum Engine Tonnage:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 4);
        pnlInformation.add(jLabel31, gridBagConstraints);

        lblMinEngineTons.setText("000.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlInformation.add(lblMinEngineTons, gridBagConstraints);

        jLabel33.setText("Base Engine Rating:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 4);
        pnlInformation.add(jLabel33, gridBagConstraints);

        lblBaseEngineRating.setText("000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlInformation.add(lblBaseEngineRating, gridBagConstraints);

        jLabel35.setText("Final Engine Rating:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 4);
        pnlInformation.add(jLabel35, gridBagConstraints);

        lblFinalEngineRating.setText("000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlInformation.add(lblFinalEngineRating, gridBagConstraints);

        jLabel28.setText("Free Heat Sinks:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 4);
        pnlInformation.add(jLabel28, gridBagConstraints);

        lblFreeHeatSinks.setText("000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlInformation.add(lblFreeHeatSinks, gridBagConstraints);

        jLabel30.setText("Crew:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        pnlInformation.add(jLabel30, gridBagConstraints);

        lblNumCrew.setText("00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlInformation.add(lblNumCrew, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlBasicSetup.add(pnlInformation, gridBagConstraints);

        pnlExperimental.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Experimental Equipment"));
        pnlExperimental.setLayout(new java.awt.GridBagLayout());

        chkArmoredMotive.setText("Armored Motive System");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlExperimental.add(chkArmoredMotive, gridBagConstraints);

        chkCommandConsole.setText("Command Console");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlExperimental.add(chkCommandConsole, gridBagConstraints);

        chkEscapePod.setText("Combat Vehicle Escape Pod");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlExperimental.add(chkEscapePod, gridBagConstraints);

        chkMinesweeper.setText("Minesweeper");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlExperimental.add(chkMinesweeper, gridBagConstraints);

        chkJetBooster.setText("VTOL Jet Booster");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlExperimental.add(chkJetBooster, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlBasicSetup.add(pnlExperimental, gridBagConstraints);

        pnlChassisMods.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Chassis Modifications"));
        pnlChassisMods.setLayout(new java.awt.GridBagLayout());

        chkFlotationHull.setText("Flotation Hull");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlChassisMods.add(chkFlotationHull, gridBagConstraints);

        chkLimitedAmph.setText("Limited Amphibious");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlChassisMods.add(chkLimitedAmph, gridBagConstraints);

        chkFullAmph.setText("Fully Amphibious");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlChassisMods.add(chkFullAmph, gridBagConstraints);

        chkDuneBuggy.setText("Dune Buggy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlChassisMods.add(chkDuneBuggy, gridBagConstraints);

        chkEnviroSealing.setText("Enviro (Vacuum) Sealing");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlChassisMods.add(chkEnviroSealing, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlBasicSetup.add(pnlChassisMods, gridBagConstraints);

        pnlBasics.addTab("Basic Setup", pnlBasicSetup);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Armor Locations"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        pnlRightArmor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Right"));
        pnlRightArmor.setLayout(new java.awt.GridBagLayout());

        lblRightIntPts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRightIntPts.setText("00");
        lblRightIntPts.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblRightIntPts.setMaximumSize(new java.awt.Dimension(45, 20));
        lblRightIntPts.setMinimumSize(new java.awt.Dimension(45, 20));
        lblRightIntPts.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlRightArmor.add(lblRightIntPts, gridBagConstraints);

        jLabel40.setText("Internal");
        pnlRightArmor.add(jLabel40, new java.awt.GridBagConstraints());

        jLabel46.setText("Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlRightArmor.add(jLabel46, gridBagConstraints);

        spnRightArmor.setMinimumSize(new java.awt.Dimension(45, 20));
        spnRightArmor.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlRightArmor.add(spnRightArmor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(pnlRightArmor, gridBagConstraints);

        pnlFrontArmor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Front"));
        pnlFrontArmor.setLayout(new java.awt.GridBagLayout());

        lblFrontIntPts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFrontIntPts.setText("00");
        lblFrontIntPts.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFrontIntPts.setMaximumSize(new java.awt.Dimension(45, 20));
        lblFrontIntPts.setMinimumSize(new java.awt.Dimension(45, 20));
        lblFrontIntPts.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlFrontArmor.add(lblFrontIntPts, gridBagConstraints);

        jLabel45.setText("Internal");
        pnlFrontArmor.add(jLabel45, new java.awt.GridBagConstraints());

        jLabel47.setText("Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlFrontArmor.add(jLabel47, gridBagConstraints);

        spnFrontArmor.setMinimumSize(new java.awt.Dimension(45, 20));
        spnFrontArmor.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlFrontArmor.add(spnFrontArmor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel1.add(pnlFrontArmor, gridBagConstraints);

        pnlLeftArmor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Left"));
        pnlLeftArmor.setLayout(new java.awt.GridBagLayout());

        lblLeftIntPts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLeftIntPts.setText("00");
        lblLeftIntPts.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblLeftIntPts.setMaximumSize(new java.awt.Dimension(45, 20));
        lblLeftIntPts.setMinimumSize(new java.awt.Dimension(45, 20));
        lblLeftIntPts.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlLeftArmor.add(lblLeftIntPts, gridBagConstraints);

        jLabel41.setText("Internal");
        pnlLeftArmor.add(jLabel41, new java.awt.GridBagConstraints());

        jLabel48.setText("Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlLeftArmor.add(jLabel48, gridBagConstraints);

        spnLeftArmor.setMinimumSize(new java.awt.Dimension(45, 20));
        spnLeftArmor.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlLeftArmor.add(spnLeftArmor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(pnlLeftArmor, gridBagConstraints);

        pnlRearArmor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Rear"));
        pnlRearArmor.setLayout(new java.awt.GridBagLayout());

        lblRearIntPts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRearIntPts.setText("00");
        lblRearIntPts.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblRearIntPts.setMaximumSize(new java.awt.Dimension(45, 20));
        lblRearIntPts.setMinimumSize(new java.awt.Dimension(45, 20));
        lblRearIntPts.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlRearArmor.add(lblRearIntPts, gridBagConstraints);

        jLabel44.setText("Internal");
        pnlRearArmor.add(jLabel44, new java.awt.GridBagConstraints());

        jLabel49.setText("Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlRearArmor.add(jLabel49, gridBagConstraints);

        spnRearArmor.setMinimumSize(new java.awt.Dimension(45, 20));
        spnRearArmor.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlRearArmor.add(spnRearArmor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel1.add(pnlRearArmor, gridBagConstraints);

        pnlTurretArmor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Turret"));
        pnlTurretArmor.setLayout(new java.awt.GridBagLayout());

        lblTurretIntPts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTurretIntPts.setText("00");
        lblTurretIntPts.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTurretIntPts.setMaximumSize(new java.awt.Dimension(45, 20));
        lblTurretIntPts.setMinimumSize(new java.awt.Dimension(45, 20));
        lblTurretIntPts.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlTurretArmor.add(lblTurretIntPts, gridBagConstraints);

        jLabel42.setText("Internal");
        pnlTurretArmor.add(jLabel42, new java.awt.GridBagConstraints());

        jLabel50.setText("Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlTurretArmor.add(jLabel50, gridBagConstraints);

        spnTurretArmor.setMinimumSize(new java.awt.Dimension(45, 20));
        spnTurretArmor.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlTurretArmor.add(spnTurretArmor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel1.add(pnlTurretArmor, gridBagConstraints);

        pnlRearTurretArmor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "R Turret"));
        pnlRearTurretArmor.setLayout(new java.awt.GridBagLayout());

        lblRearTurretIntPts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRearTurretIntPts.setText("00");
        lblRearTurretIntPts.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblRearTurretIntPts.setMaximumSize(new java.awt.Dimension(45, 20));
        lblRearTurretIntPts.setMinimumSize(new java.awt.Dimension(45, 20));
        lblRearTurretIntPts.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlRearTurretArmor.add(lblRearTurretIntPts, gridBagConstraints);

        jLabel43.setText("Internal");
        pnlRearTurretArmor.add(jLabel43, new java.awt.GridBagConstraints());

        jLabel51.setText("Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlRearTurretArmor.add(jLabel51, gridBagConstraints);

        spnRearTurretArmor.setMinimumSize(new java.awt.Dimension(45, 20));
        spnRearTurretArmor.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlRearTurretArmor.add(spnRearTurretArmor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel1.add(pnlRearTurretArmor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        jPanel2.add(jPanel1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Armor Type"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel52.setText("Armor Type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(jLabel52, gridBagConstraints);

        cmbArmorType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Standard", "Industrial", "Commercial", "Ferro-Fibrous", "Light Ferro-Fibrous", "Heavy Ferro-Fibrous", "Vehicular Stealth" }));
        cmbArmorType.setMinimumSize(new java.awt.Dimension(150, 20));
        cmbArmorType.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(cmbArmorType, gridBagConstraints);

        chkBalanceLRArmor.setText("Balance Left/Right Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel3.add(chkBalanceLRArmor, gridBagConstraints);

        chkBalanceFRArmor.setText("Balance Front/Rear Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        jPanel3.add(chkBalanceFRArmor, gridBagConstraints);

        btnSetArmorTons.setText("Set Armor Tonnage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(btnSetArmorTons, gridBagConstraints);

        btnUseRemaining.setText("Use Remaining Tonnage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(btnUseRemaining, gridBagConstraints);

        btnMaximize.setText("Maximize Armor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(btnMaximize, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        jPanel2.add(jPanel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Armor Information"));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel32.setText("Tons");
        jPanel4.add(jLabel32, new java.awt.GridBagConstraints());

        jLabel34.setText("Space");
        jPanel4.add(jLabel34, new java.awt.GridBagConstraints());

        lblArmorTotals.setText("999 of 999 Armor Points");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel4.add(lblArmorTotals, gridBagConstraints);

        lblArmorCoverage.setText("100.00% Coverage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel4.add(lblArmorCoverage, gridBagConstraints);

        txtArmorTons.setEditable(false);
        txtArmorTons.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtArmorTons.setText("000.00");
        txtArmorTons.setMinimumSize(new java.awt.Dimension(50, 20));
        txtArmorTons.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel4.add(txtArmorTons, gridBagConstraints);

        txtArmorSpace.setEditable(false);
        txtArmorSpace.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtArmorSpace.setText("00");
        txtArmorSpace.setMinimumSize(new java.awt.Dimension(40, 20));
        txtArmorSpace.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel4.add(txtArmorSpace, gridBagConstraints);

        lblArmorTonsWasted.setText("0.00 Tons Wasted");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel4.add(lblArmorTonsWasted, gridBagConstraints);

        lblArmorLeftInLot.setText("99 Points Left In This 1/2 Ton Lot");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel4.add(lblArmorLeftInLot, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jPanel2.add(jPanel4, gridBagConstraints);

        pnlBasics.addTab("Armor", jPanel2);

        pnlEquipment.setLayout(new java.awt.GridBagLayout());
        pnlBasics.addTab("Equipment", pnlEquipment);

        javax.swing.GroupLayout pnlFluffLayout = new javax.swing.GroupLayout(pnlFluff);
        pnlFluff.setLayout(pnlFluffLayout);
        pnlFluffLayout.setHorizontalGroup(
            pnlFluffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 783, Short.MAX_VALUE)
        );
        pnlFluffLayout.setVerticalGroup(
            pnlFluffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 465, Short.MAX_VALUE)
        );

        pnlBasics.addTab("Fluff", pnlFluff);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(pnlBasics, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Tonnage: 000.00");
        jTextField1.setMaximumSize(new java.awt.Dimension(110, 20));
        jTextField1.setMinimumSize(new java.awt.Dimension(110, 20));
        jTextField1.setPreferredSize(new java.awt.Dimension(110, 20));
        pnlInfoPane.add(jTextField1);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("Free Tons: 000.00");
        jTextField3.setMaximumSize(new java.awt.Dimension(115, 20));
        jTextField3.setMinimumSize(new java.awt.Dimension(115, 20));
        jTextField3.setPreferredSize(new java.awt.Dimension(115, 20));
        pnlInfoPane.add(jTextField3);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.setText("Space: 00");
        jTextField4.setMaximumSize(new java.awt.Dimension(65, 20));
        jTextField4.setMinimumSize(new java.awt.Dimension(65, 20));
        jTextField4.setPreferredSize(new java.awt.Dimension(65, 20));
        pnlInfoPane.add(jTextField4);

        jTextField5.setEditable(false);
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.setText("Unplaced Items: 00");
        jTextField5.setMaximumSize(new java.awt.Dimension(120, 20));
        jTextField5.setMinimumSize(new java.awt.Dimension(120, 20));
        jTextField5.setPreferredSize(new java.awt.Dimension(120, 20));
        pnlInfoPane.add(jTextField5);

        jTextField6.setEditable(false);
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("BV: 00,000");
        jTextField6.setMaximumSize(new java.awt.Dimension(75, 20));
        jTextField6.setMinimumSize(new java.awt.Dimension(75, 20));
        jTextField6.setPreferredSize(new java.awt.Dimension(75, 20));
        pnlInfoPane.add(jTextField6);

        jTextField7.setEditable(false);
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("Cost: 000,000,000,000.00");
        jTextField7.setMaximumSize(new java.awt.Dimension(165, 20));
        jTextField7.setMinimumSize(new java.awt.Dimension(165, 20));
        jTextField7.setPreferredSize(new java.awt.Dimension(165, 20));
        pnlInfoPane.add(jTextField7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(pnlInfoPane, gridBagConstraints);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/document--plus.png"))); // NOI18N
        jButton1.setText("New");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/folder-open-document.png"))); // NOI18N
        jButton2.setText("Open");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/disk-black.png"))); // NOI18N
        jButton7.setText("Save");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton7);
        jToolBar1.add(jSeparator1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/printer.png"))); // NOI18N
        jButton3.setText("Print");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/projection-screen.png"))); // NOI18N
        jButton4.setText("Preview");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton4);
        jToolBar1.add(jSeparator2);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/document--arrow.png"))); // NOI18N
        jButton5.setText("Export");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);
        jToolBar1.add(jSeparator3);

        btnPostToS7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/server.png"))); // NOI18N
        btnPostToS7.setText("S7");
        btnPostToS7.setToolTipText("Upload to Solaris7.com");
        btnPostToS7.setFocusable(false);
        btnPostToS7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPostToS7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPostToS7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostToS7ActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPostToS7);
        jToolBar1.add(jSeparator25);

        btnAddToForceList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/clipboard--plus.png"))); // NOI18N
        btnAddToForceList.setText("Add");
        btnAddToForceList.setToolTipText("Add  to Force List");
        btnAddToForceList.setFocusable(false);
        btnAddToForceList.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddToForceList.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddToForceList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToForceListActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAddToForceList);

        btnForceList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/clipboard.png"))); // NOI18N
        btnForceList.setText("Force");
        btnForceList.setToolTipText("Force List");
        btnForceList.setFocusable(false);
        btnForceList.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnForceList.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnForceList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForceListActionPerformed(evt);
            }
        });
        jToolBar1.add(btnForceList);
        jToolBar1.add(jSeparator4);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saw/images/gear.png"))); // NOI18N
        jButton6.setText("Options");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jToolBar1, gridBagConstraints);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnForceListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForceListActionPerformed
        dForce.setLocationRelativeTo(this);
        dForce.setVisible(true);
}//GEN-LAST:event_btnForceListActionPerformed

    private void btnAddToForceListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToForceListActionPerformed
        /*
        SolidifyVee();
        if (VerifyVee(evt)) {
            dForce.Add(CurVee);
        }
        */
}//GEN-LAST:event_btnAddToForceListActionPerformed

    private void btnPostToS7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostToS7ActionPerformed
        //mnuPostS7ActionPerformed(evt);
}//GEN-LAST:event_btnPostToS7ActionPerformed

    public void setUnit(Vector v) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void loadUnitIntoGUI() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void showOpenDialog() {
        //this.dOpen.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToForceList;
    private javax.swing.JButton btnForceList;
    private javax.swing.JButton btnMaximize;
    private javax.swing.JButton btnPostToS7;
    private javax.swing.JButton btnSetArmorTons;
    private javax.swing.JButton btnUseRemaining;
    private javax.swing.JCheckBox chkArmoredMotive;
    private javax.swing.JCheckBox chkBalanceFRArmor;
    private javax.swing.JCheckBox chkBalanceLRArmor;
    private javax.swing.JCheckBox chkChinTurret;
    private javax.swing.JCheckBox chkCommandConsole;
    private javax.swing.JCheckBox chkDualTurret;
    private javax.swing.JCheckBox chkDuneBuggy;
    private javax.swing.JCheckBox chkEnviroSealing;
    private javax.swing.JCheckBox chkEscapePod;
    private javax.swing.JCheckBox chkFlotationHull;
    private javax.swing.JCheckBox chkFullAmph;
    private javax.swing.JCheckBox chkJetBooster;
    private javax.swing.JCheckBox chkLimitedAmph;
    private javax.swing.JCheckBox chkMastMount;
    private javax.swing.JCheckBox chkMinesweeper;
    private javax.swing.JCheckBox chkOmniVee;
    private javax.swing.JCheckBox chkSingleTurret;
    private javax.swing.JCheckBox chkSponsoonTurrets;
    private javax.swing.JCheckBox chkTrailer;
    private javax.swing.JCheckBox chkYearRestrict;
    private javax.swing.JComboBox cmbArmorType;
    private javax.swing.JComboBox cmbEngineType;
    private javax.swing.JComboBox cmbEra;
    private javax.swing.JComboBox cmbMotiveType;
    private javax.swing.JComboBox cmbRulesLevel;
    private javax.swing.JComboBox cmbTechBase;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator25;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblArmorCoverage;
    private javax.swing.JLabel lblArmorLeftInLot;
    private javax.swing.JLabel lblArmorTonsWasted;
    private javax.swing.JLabel lblArmorTotals;
    private javax.swing.JLabel lblBaseEngineRating;
    private javax.swing.JLabel lblEraYears;
    private javax.swing.JLabel lblFinalEngineRating;
    private javax.swing.JLabel lblFlankMP;
    private javax.swing.JLabel lblFreeHeatSinks;
    private javax.swing.JLabel lblFrontIntPts;
    private javax.swing.JLabel lblLeftIntPts;
    private javax.swing.JLabel lblMinEngineTons;
    private javax.swing.JLabel lblNumCrew;
    private javax.swing.JLabel lblRearIntPts;
    private javax.swing.JLabel lblRearTurretIntPts;
    private javax.swing.JLabel lblRightIntPts;
    private javax.swing.JLabel lblSupensionFacter;
    private javax.swing.JLabel lblTurretIntPts;
    private javax.swing.JLabel lblVeeClass;
    private javax.swing.JPanel pblBasicInfo;
    private javax.swing.JPanel pnlBasicSetup;
    private javax.swing.JTabbedPane pnlBasics;
    private javax.swing.JPanel pnlChassis;
    private javax.swing.JPanel pnlChassisMods;
    private javax.swing.JPanel pnlEquipment;
    private javax.swing.JPanel pnlExperimental;
    private javax.swing.JPanel pnlFluff;
    private javax.swing.JPanel pnlFrontArmor;
    private javax.swing.JPanel pnlInfoPane;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlLeftArmor;
    private javax.swing.JPanel pnlMovement;
    private javax.swing.JPanel pnlRearArmor;
    private javax.swing.JPanel pnlRearTurretArmor;
    private javax.swing.JPanel pnlRightArmor;
    private javax.swing.JPanel pnlSummary;
    private javax.swing.JPanel pnlTurretArmor;
    private javax.swing.JPanel pnlTurrets;
    private javax.swing.JSpinner spnCruiseMP;
    private javax.swing.JSpinner spnFrontArmor;
    private javax.swing.JSpinner spnJumpMP;
    private javax.swing.JSpinner spnLeftArmor;
    private javax.swing.JSpinner spnRearArmor;
    private javax.swing.JSpinner spnRearTurretArmor;
    private javax.swing.JSpinner spnRightArmor;
    private javax.swing.JSpinner spnTonnage;
    private javax.swing.JSpinner spnTurretArmor;
    private javax.swing.JTextField txtArmorSpace;
    private javax.swing.JTextField txtArmorTons;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtProdYear;
    private javax.swing.JTextField txtSumArmAV;
    private javax.swing.JTextField txtSumArmSpace;
    private javax.swing.JTextField txtSumArmTons;
    private javax.swing.JTextField txtSumConAV;
    private javax.swing.JTextField txtSumConTons;
    private javax.swing.JTextField txtSumEngAV;
    private javax.swing.JTextField txtSumEngSpace;
    private javax.swing.JTextField txtSumEngTons;
    private javax.swing.JTextField txtSumHSAV;
    private javax.swing.JTextField txtSumHSTons;
    private javax.swing.JTextField txtSumIntAV;
    private javax.swing.JTextField txtSumIntTons;
    private javax.swing.JTextField txtSumJJAV;
    private javax.swing.JTextField txtSumJJSpace;
    private javax.swing.JTextField txtSumJJTons;
    private javax.swing.JTextField txtSumLifAV;
    private javax.swing.JTextField txtSumLifTons;
    private javax.swing.JTextField txtSumPAAV;
    private javax.swing.JTextField txtSumPATons;
    private javax.swing.JTextField txtSumRTuAV;
    private javax.swing.JTextField txtSumRTuTons;
    private javax.swing.JTextField txtSumSpnAV;
    private javax.swing.JTextField txtSumSpnTons;
    private javax.swing.JTextField txtSumTurAV;
    private javax.swing.JTextField txtSumTurTons;
    private javax.swing.JTextField txtVehicleName;
    // End of variables declaration//GEN-END:variables
}
